def start_sim(roads, vehicle_mtx, offset, steps_per_update):
    """
    A wrapper class to start the simulation based on parameters generated by a reader object.
    :param roads: matrix connecting each road as per coordinates [(A, B), (B, C)] where Node N --> (x, y) coordinates of floats
    :param vehicle_mtx: dict that controls the setting of vehicles: {vehicle_rate: :.2f, 'vehicles': [nr_of_vehicles, {'path': [index(A), index(B), index(C)]}]}
    :param offset: pygame offset parameter for the city in the window
    :param steps_per_update: number of steps passing between each frame of the simulation (should be turned off for learning phase)
    :return:
    """
    from trafficSimulator.simulation import Simulation
    from trafficSimulator.window import Window
    sim = Simulation()
    sim.create_roads(roads)
    sim.create_gen(vehicle_mtx)
    win = Window(sim)
    win.offset = offset  # (x, y) tuple
    win.run(steps_per_update=steps_per_update)
